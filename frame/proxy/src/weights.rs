
//! Autogenerated weights for `pallet_proxy`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-27, STEPS: `2`, REPEAT: `1`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `i9`, CPU: `13th Gen Intel(R) Core(TM) i9-13900K`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/substrate
// benchmark
// pallet
// --chain=dev
// --steps=2
// --repeat=1
// --pallet=pallet_proxy
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./weights-dev-release/frame/proxy/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_proxy`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_proxy::WeightInfo for WeightInfo<T> {
	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 31]`.
	fn proxy(_p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `191 + p * (37 ±0)`
		//  Estimated: `4706`
		// Minimum execution time: 17_820 nanoseconds.
		Weight::from_ref_time(18_971_000)
			.saturating_add(Weight::from_proof_size(4706))
			.saturating_add(T::DbWeight::get().reads(1))
	}
	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 31]`.
	fn proxy_announced(a: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `618 + a * (68 ±0) + p * (35 ±0)`
		//  Estimated: `13997`
		// Minimum execution time: 34_428 nanoseconds.
		Weight::from_ref_time(34_063_233)
			.saturating_add(Weight::from_proof_size(13997))
			// Standard Error: 30_282
			.saturating_add(Weight::from_ref_time(156_032).saturating_mul(a.into()))
			// Standard Error: 31_292
			.saturating_add(Weight::from_ref_time(11_766).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 31]`.
	fn remove_announcement(a: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `502 + a * (68 ±0)`
		//  Estimated: `9291`
		// Minimum execution time: 20_001 nanoseconds.
		Weight::from_ref_time(19_735_950)
			.saturating_add(Weight::from_proof_size(9291))
			// Standard Error: 12_878
			.saturating_add(Weight::from_ref_time(181_661).saturating_mul(a.into()))
			// Standard Error: 13_307
			.saturating_add(Weight::from_ref_time(8_550).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 31]`.
	fn reject_announcement(a: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `502 + a * (68 ±0)`
		//  Estimated: `9291`
		// Minimum execution time: 19_380 nanoseconds.
		Weight::from_ref_time(18_810_633)
			.saturating_add(Weight::from_proof_size(9291))
			// Standard Error: 17_655
			.saturating_add(Weight::from_ref_time(224_580).saturating_mul(a.into()))
			// Standard Error: 18_244
			.saturating_add(Weight::from_ref_time(18_366).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 31]`.
	fn announce(a: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `437 + a * (71 ±0) + p * (35 ±0)`
		//  Estimated: `13997`
		// Minimum execution time: 28_761 nanoseconds.
		Weight::from_ref_time(28_367_816)
			.saturating_add(Weight::from_proof_size(13997))
			// Standard Error: 42_267
			.saturating_add(Weight::from_ref_time(210_629).saturating_mul(a.into()))
			// Standard Error: 43_676
			.saturating_add(Weight::from_ref_time(12_683).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 31]`.
	fn add_proxy(_p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `191 + p * (37 ±0)`
		//  Estimated: `4706`
		// Minimum execution time: 22_026 nanoseconds.
		Weight::from_ref_time(24_916_000)
			.saturating_add(Weight::from_proof_size(4706))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 31]`.
	fn remove_proxy(_p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `191 + p * (37 ±0)`
		//  Estimated: `4706`
		// Minimum execution time: 21_685 nanoseconds.
		Weight::from_ref_time(24_240_000)
			.saturating_add(Weight::from_proof_size(4706))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 31]`.
	fn remove_proxies(_p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `191 + p * (37 ±0)`
		//  Estimated: `4706`
		// Minimum execution time: 18_418 nanoseconds.
		Weight::from_ref_time(23_276_000)
			.saturating_add(Weight::from_proof_size(4706))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 31]`.
	fn create_pure(_p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `173`
		//  Estimated: `4706`
		// Minimum execution time: 23_960 nanoseconds.
		Weight::from_ref_time(25_307_000)
			.saturating_add(Weight::from_proof_size(4706))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// The range of component `p` is `[0, 30]`.
	fn kill_pure(_p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `229 + p * (37 ±0)`
		//  Estimated: `4706`
		// Minimum execution time: 19_347 nanoseconds.
		Weight::from_ref_time(19_864_000)
			.saturating_add(Weight::from_proof_size(4706))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
