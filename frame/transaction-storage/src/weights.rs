
//! Autogenerated weights for `pallet_transaction_storage`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-27, STEPS: `2`, REPEAT: `1`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `i9`, CPU: `13th Gen Intel(R) Core(TM) i9-13900K`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/substrate
// benchmark
// pallet
// --chain=dev
// --steps=2
// --repeat=1
// --pallet=pallet_transaction_storage
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./weights-dev-release/frame/transaction-storage/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_transaction_storage`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_transaction_storage::WeightInfo for WeightInfo<T> {
	/// Storage: TransactionStorage ByteFee (r:1 w:0)
	/// Proof: TransactionStorage ByteFee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: TransactionStorage EntryFee (r:1 w:0)
	/// Proof: TransactionStorage EntryFee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: TransactionStorage BlockTransactions (r:1 w:1)
	/// Proof: TransactionStorage BlockTransactions (max_values: Some(1), max_size: Some(36866), added: 37361, mode: MaxEncodedLen)
	/// The range of component `l` is `[1, 8388608]`.
	fn store(_l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `176`
		//  Estimated: `41353`
		// Minimum execution time: 34_795 nanoseconds.
		Weight::from_ref_time(39_766_914_000)
			.saturating_add(Weight::from_proof_size(41353))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: TransactionStorage Transactions (r:1 w:0)
	/// Proof: TransactionStorage Transactions (max_values: None, max_size: Some(36886), added: 39361, mode: MaxEncodedLen)
	/// Storage: TransactionStorage ByteFee (r:1 w:0)
	/// Proof: TransactionStorage ByteFee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: TransactionStorage EntryFee (r:1 w:0)
	/// Proof: TransactionStorage EntryFee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: TransactionStorage BlockTransactions (r:1 w:1)
	/// Proof: TransactionStorage BlockTransactions (max_values: Some(1), max_size: Some(36866), added: 37361, mode: MaxEncodedLen)
	fn renew() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `358`
		//  Estimated: `81704`
		// Minimum execution time: 44_034 nanoseconds.
		Weight::from_ref_time(44_034_000)
			.saturating_add(Weight::from_proof_size(81704))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: TransactionStorage ProofChecked (r:1 w:1)
	/// Proof: TransactionStorage ProofChecked (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: TransactionStorage StoragePeriod (r:1 w:0)
	/// Proof: TransactionStorage StoragePeriod (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: TransactionStorage ChunkCount (r:1 w:0)
	/// Proof: TransactionStorage ChunkCount (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
	/// Storage: System ParentHash (r:1 w:0)
	/// Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: TransactionStorage Transactions (r:1 w:0)
	/// Proof: TransactionStorage Transactions (max_values: None, max_size: Some(36886), added: 39361, mode: MaxEncodedLen)
	fn check_proof_max() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `37177`
		//  Estimated: `48332`
		// Minimum execution time: 58_278 nanoseconds.
		Weight::from_ref_time(58_278_000)
			.saturating_add(Weight::from_proof_size(48332))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
