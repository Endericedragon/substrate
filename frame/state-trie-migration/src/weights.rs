
//! Autogenerated weights for `pallet_state_trie_migration`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-27, STEPS: `2`, REPEAT: `1`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `i9`, CPU: `13th Gen Intel(R) Core(TM) i9-13900K`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/substrate
// benchmark
// pallet
// --chain=dev
// --steps=2
// --repeat=1
// --pallet=pallet_state_trie_migration
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./weights-dev-release/frame/state-trie-migration/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_state_trie_migration`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_state_trie_migration::WeightInfo for WeightInfo<T> {
	/// Storage: StateTrieMigration SignedMigrationMaxLimits (r:1 w:0)
	/// Proof: StateTrieMigration SignedMigrationMaxLimits (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: StateTrieMigration MigrationProcess (r:1 w:1)
	/// Proof: StateTrieMigration MigrationProcess (max_values: Some(1), max_size: Some(1042), added: 1537, mode: MaxEncodedLen)
	fn continue_migrate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108`
		//  Estimated: `4020`
		// Minimum execution time: 22_069 nanoseconds.
		Weight::from_ref_time(22_069_000)
			.saturating_add(Weight::from_proof_size(4020))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: StateTrieMigration SignedMigrationMaxLimits (r:1 w:0)
	/// Proof: StateTrieMigration SignedMigrationMaxLimits (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	fn continue_migrate_wrong_witness() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `76`
		//  Estimated: `1493`
		// Minimum execution time: 6_736 nanoseconds.
		Weight::from_ref_time(6_736_000)
			.saturating_add(Weight::from_proof_size(1493))
			.saturating_add(T::DbWeight::get().reads(1))
	}
	fn migrate_custom_top_success() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 14_455 nanoseconds.
		Weight::from_ref_time(14_455_000)
			.saturating_add(Weight::from_proof_size(0))
	}
	/// Storage: unknown `0x666f6f` (r:1 w:1)
	/// Proof Skipped: unknown `0x666f6f` (r:1 w:1)
	fn migrate_custom_top_fail() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `144`
		//  Estimated: `3609`
		// Minimum execution time: 27_647 nanoseconds.
		Weight::from_ref_time(27_647_000)
			.saturating_add(Weight::from_proof_size(3609))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	fn migrate_custom_child_success() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_804 nanoseconds.
		Weight::from_ref_time(11_804_000)
			.saturating_add(Weight::from_proof_size(0))
	}
	/// Storage: unknown `0x666f6f` (r:1 w:1)
	/// Proof Skipped: unknown `0x666f6f` (r:1 w:1)
	fn migrate_custom_child_fail() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `136`
		//  Estimated: `3601`
		// Minimum execution time: 28_625 nanoseconds.
		Weight::from_ref_time(28_625_000)
			.saturating_add(Weight::from_proof_size(3601))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: unknown `0x6b6579` (r:1 w:1)
	/// Proof Skipped: unknown `0x6b6579` (r:1 w:1)
	/// The range of component `v` is `[1, 4194304]`.
	fn process_top_key(_v: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `190 + v * (1 Â±0)`
		//  Estimated: `4197997`
		// Minimum execution time: 9_001 nanoseconds.
		Weight::from_ref_time(3_982_573_000)
			.saturating_add(Weight::from_proof_size(4197997))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
